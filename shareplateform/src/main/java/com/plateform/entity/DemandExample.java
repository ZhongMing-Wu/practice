package com.plateform.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class DemandExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table spt_demand
     *
     * @mbg.generated Thu Oct 17 14:47:24 CST 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table spt_demand
     *
     * @mbg.generated Thu Oct 17 14:47:24 CST 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table spt_demand
     *
     * @mbg.generated Thu Oct 17 14:47:24 CST 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table spt_demand
     *
     * @mbg.generated Thu Oct 17 14:47:24 CST 2019
     */
    public DemandExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table spt_demand
     *
     * @mbg.generated Thu Oct 17 14:47:24 CST 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table spt_demand
     *
     * @mbg.generated Thu Oct 17 14:47:24 CST 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table spt_demand
     *
     * @mbg.generated Thu Oct 17 14:47:24 CST 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table spt_demand
     *
     * @mbg.generated Thu Oct 17 14:47:24 CST 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table spt_demand
     *
     * @mbg.generated Thu Oct 17 14:47:24 CST 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table spt_demand
     *
     * @mbg.generated Thu Oct 17 14:47:24 CST 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table spt_demand
     *
     * @mbg.generated Thu Oct 17 14:47:24 CST 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table spt_demand
     *
     * @mbg.generated Thu Oct 17 14:47:24 CST 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table spt_demand
     *
     * @mbg.generated Thu Oct 17 14:47:24 CST 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table spt_demand
     *
     * @mbg.generated Thu Oct 17 14:47:24 CST 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table spt_demand
     *
     * @mbg.generated Thu Oct 17 14:47:24 CST 2019
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("ID =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("ID <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("ID >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("ID >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("ID <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("ID <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("ID in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("ID not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("ID between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("ID not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andDemandNoIsNull() {
            addCriterion("DEMAND_NO is null");
            return (Criteria) this;
        }

        public Criteria andDemandNoIsNotNull() {
            addCriterion("DEMAND_NO is not null");
            return (Criteria) this;
        }

        public Criteria andDemandNoEqualTo(String value) {
            addCriterion("DEMAND_NO =", value, "demandNo");
            return (Criteria) this;
        }

        public Criteria andDemandNoNotEqualTo(String value) {
            addCriterion("DEMAND_NO <>", value, "demandNo");
            return (Criteria) this;
        }

        public Criteria andDemandNoGreaterThan(String value) {
            addCriterion("DEMAND_NO >", value, "demandNo");
            return (Criteria) this;
        }

        public Criteria andDemandNoGreaterThanOrEqualTo(String value) {
            addCriterion("DEMAND_NO >=", value, "demandNo");
            return (Criteria) this;
        }

        public Criteria andDemandNoLessThan(String value) {
            addCriterion("DEMAND_NO <", value, "demandNo");
            return (Criteria) this;
        }

        public Criteria andDemandNoLessThanOrEqualTo(String value) {
            addCriterion("DEMAND_NO <=", value, "demandNo");
            return (Criteria) this;
        }

        public Criteria andDemandNoLike(String value) {
            addCriterion("DEMAND_NO like", value, "demandNo");
            return (Criteria) this;
        }

        public Criteria andDemandNoNotLike(String value) {
            addCriterion("DEMAND_NO not like", value, "demandNo");
            return (Criteria) this;
        }

        public Criteria andDemandNoIn(List<String> values) {
            addCriterion("DEMAND_NO in", values, "demandNo");
            return (Criteria) this;
        }

        public Criteria andDemandNoNotIn(List<String> values) {
            addCriterion("DEMAND_NO not in", values, "demandNo");
            return (Criteria) this;
        }

        public Criteria andDemandNoBetween(String value1, String value2) {
            addCriterion("DEMAND_NO between", value1, value2, "demandNo");
            return (Criteria) this;
        }

        public Criteria andDemandNoNotBetween(String value1, String value2) {
            addCriterion("DEMAND_NO not between", value1, value2, "demandNo");
            return (Criteria) this;
        }

        public Criteria andUserNoIsNull() {
            addCriterion("USER_NO is null");
            return (Criteria) this;
        }

        public Criteria andUserNoIsNotNull() {
            addCriterion("USER_NO is not null");
            return (Criteria) this;
        }

        public Criteria andUserNoEqualTo(String value) {
            addCriterion("USER_NO =", value, "userNo");
            return (Criteria) this;
        }

        public Criteria andUserNoNotEqualTo(String value) {
            addCriterion("USER_NO <>", value, "userNo");
            return (Criteria) this;
        }

        public Criteria andUserNoGreaterThan(String value) {
            addCriterion("USER_NO >", value, "userNo");
            return (Criteria) this;
        }

        public Criteria andUserNoGreaterThanOrEqualTo(String value) {
            addCriterion("USER_NO >=", value, "userNo");
            return (Criteria) this;
        }

        public Criteria andUserNoLessThan(String value) {
            addCriterion("USER_NO <", value, "userNo");
            return (Criteria) this;
        }

        public Criteria andUserNoLessThanOrEqualTo(String value) {
            addCriterion("USER_NO <=", value, "userNo");
            return (Criteria) this;
        }

        public Criteria andUserNoLike(String value) {
            addCriterion("USER_NO like", value, "userNo");
            return (Criteria) this;
        }

        public Criteria andUserNoNotLike(String value) {
            addCriterion("USER_NO not like", value, "userNo");
            return (Criteria) this;
        }

        public Criteria andUserNoIn(List<String> values) {
            addCriterion("USER_NO in", values, "userNo");
            return (Criteria) this;
        }

        public Criteria andUserNoNotIn(List<String> values) {
            addCriterion("USER_NO not in", values, "userNo");
            return (Criteria) this;
        }

        public Criteria andUserNoBetween(String value1, String value2) {
            addCriterion("USER_NO between", value1, value2, "userNo");
            return (Criteria) this;
        }

        public Criteria andUserNoNotBetween(String value1, String value2) {
            addCriterion("USER_NO not between", value1, value2, "userNo");
            return (Criteria) this;
        }

        public Criteria andDemandTimeIsNull() {
            addCriterion("DEMAND_TIME is null");
            return (Criteria) this;
        }

        public Criteria andDemandTimeIsNotNull() {
            addCriterion("DEMAND_TIME is not null");
            return (Criteria) this;
        }

        public Criteria andDemandTimeEqualTo(Date value) {
            addCriterionForJDBCDate("DEMAND_TIME =", value, "demandTime");
            return (Criteria) this;
        }

        public Criteria andDemandTimeNotEqualTo(Date value) {
            addCriterionForJDBCDate("DEMAND_TIME <>", value, "demandTime");
            return (Criteria) this;
        }

        public Criteria andDemandTimeGreaterThan(Date value) {
            addCriterionForJDBCDate("DEMAND_TIME >", value, "demandTime");
            return (Criteria) this;
        }

        public Criteria andDemandTimeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("DEMAND_TIME >=", value, "demandTime");
            return (Criteria) this;
        }

        public Criteria andDemandTimeLessThan(Date value) {
            addCriterionForJDBCDate("DEMAND_TIME <", value, "demandTime");
            return (Criteria) this;
        }

        public Criteria andDemandTimeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("DEMAND_TIME <=", value, "demandTime");
            return (Criteria) this;
        }

        public Criteria andDemandTimeIn(List<Date> values) {
            addCriterionForJDBCDate("DEMAND_TIME in", values, "demandTime");
            return (Criteria) this;
        }

        public Criteria andDemandTimeNotIn(List<Date> values) {
            addCriterionForJDBCDate("DEMAND_TIME not in", values, "demandTime");
            return (Criteria) this;
        }

        public Criteria andDemandTimeBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("DEMAND_TIME between", value1, value2, "demandTime");
            return (Criteria) this;
        }

        public Criteria andDemandTimeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("DEMAND_TIME not between", value1, value2, "demandTime");
            return (Criteria) this;
        }

        public Criteria andDemandDescriptionIsNull() {
            addCriterion("DEMAND_DESCRIPTION is null");
            return (Criteria) this;
        }

        public Criteria andDemandDescriptionIsNotNull() {
            addCriterion("DEMAND_DESCRIPTION is not null");
            return (Criteria) this;
        }

        public Criteria andDemandDescriptionEqualTo(String value) {
            addCriterion("DEMAND_DESCRIPTION =", value, "demandDescription");
            return (Criteria) this;
        }

        public Criteria andDemandDescriptionNotEqualTo(String value) {
            addCriterion("DEMAND_DESCRIPTION <>", value, "demandDescription");
            return (Criteria) this;
        }

        public Criteria andDemandDescriptionGreaterThan(String value) {
            addCriterion("DEMAND_DESCRIPTION >", value, "demandDescription");
            return (Criteria) this;
        }

        public Criteria andDemandDescriptionGreaterThanOrEqualTo(String value) {
            addCriterion("DEMAND_DESCRIPTION >=", value, "demandDescription");
            return (Criteria) this;
        }

        public Criteria andDemandDescriptionLessThan(String value) {
            addCriterion("DEMAND_DESCRIPTION <", value, "demandDescription");
            return (Criteria) this;
        }

        public Criteria andDemandDescriptionLessThanOrEqualTo(String value) {
            addCriterion("DEMAND_DESCRIPTION <=", value, "demandDescription");
            return (Criteria) this;
        }

        public Criteria andDemandDescriptionLike(String value) {
            addCriterion("DEMAND_DESCRIPTION like", value, "demandDescription");
            return (Criteria) this;
        }

        public Criteria andDemandDescriptionNotLike(String value) {
            addCriterion("DEMAND_DESCRIPTION not like", value, "demandDescription");
            return (Criteria) this;
        }

        public Criteria andDemandDescriptionIn(List<String> values) {
            addCriterion("DEMAND_DESCRIPTION in", values, "demandDescription");
            return (Criteria) this;
        }

        public Criteria andDemandDescriptionNotIn(List<String> values) {
            addCriterion("DEMAND_DESCRIPTION not in", values, "demandDescription");
            return (Criteria) this;
        }

        public Criteria andDemandDescriptionBetween(String value1, String value2) {
            addCriterion("DEMAND_DESCRIPTION between", value1, value2, "demandDescription");
            return (Criteria) this;
        }

        public Criteria andDemandDescriptionNotBetween(String value1, String value2) {
            addCriterion("DEMAND_DESCRIPTION not between", value1, value2, "demandDescription");
            return (Criteria) this;
        }

        public Criteria andDemandCategoryIsNull() {
            addCriterion("DEMAND_CATEGORY is null");
            return (Criteria) this;
        }

        public Criteria andDemandCategoryIsNotNull() {
            addCriterion("DEMAND_CATEGORY is not null");
            return (Criteria) this;
        }

        public Criteria andDemandCategoryEqualTo(String value) {
            addCriterion("DEMAND_CATEGORY =", value, "demandCategory");
            return (Criteria) this;
        }

        public Criteria andDemandCategoryNotEqualTo(String value) {
            addCriterion("DEMAND_CATEGORY <>", value, "demandCategory");
            return (Criteria) this;
        }

        public Criteria andDemandCategoryGreaterThan(String value) {
            addCriterion("DEMAND_CATEGORY >", value, "demandCategory");
            return (Criteria) this;
        }

        public Criteria andDemandCategoryGreaterThanOrEqualTo(String value) {
            addCriterion("DEMAND_CATEGORY >=", value, "demandCategory");
            return (Criteria) this;
        }

        public Criteria andDemandCategoryLessThan(String value) {
            addCriterion("DEMAND_CATEGORY <", value, "demandCategory");
            return (Criteria) this;
        }

        public Criteria andDemandCategoryLessThanOrEqualTo(String value) {
            addCriterion("DEMAND_CATEGORY <=", value, "demandCategory");
            return (Criteria) this;
        }

        public Criteria andDemandCategoryLike(String value) {
            addCriterion("DEMAND_CATEGORY like", value, "demandCategory");
            return (Criteria) this;
        }

        public Criteria andDemandCategoryNotLike(String value) {
            addCriterion("DEMAND_CATEGORY not like", value, "demandCategory");
            return (Criteria) this;
        }

        public Criteria andDemandCategoryIn(List<String> values) {
            addCriterion("DEMAND_CATEGORY in", values, "demandCategory");
            return (Criteria) this;
        }

        public Criteria andDemandCategoryNotIn(List<String> values) {
            addCriterion("DEMAND_CATEGORY not in", values, "demandCategory");
            return (Criteria) this;
        }

        public Criteria andDemandCategoryBetween(String value1, String value2) {
            addCriterion("DEMAND_CATEGORY between", value1, value2, "demandCategory");
            return (Criteria) this;
        }

        public Criteria andDemandCategoryNotBetween(String value1, String value2) {
            addCriterion("DEMAND_CATEGORY not between", value1, value2, "demandCategory");
            return (Criteria) this;
        }

        public Criteria andRestrictionIsNull() {
            addCriterion("RESTRICTION is null");
            return (Criteria) this;
        }

        public Criteria andRestrictionIsNotNull() {
            addCriterion("RESTRICTION is not null");
            return (Criteria) this;
        }

        public Criteria andRestrictionEqualTo(String value) {
            addCriterion("RESTRICTION =", value, "restriction");
            return (Criteria) this;
        }

        public Criteria andRestrictionNotEqualTo(String value) {
            addCriterion("RESTRICTION <>", value, "restriction");
            return (Criteria) this;
        }

        public Criteria andRestrictionGreaterThan(String value) {
            addCriterion("RESTRICTION >", value, "restriction");
            return (Criteria) this;
        }

        public Criteria andRestrictionGreaterThanOrEqualTo(String value) {
            addCriterion("RESTRICTION >=", value, "restriction");
            return (Criteria) this;
        }

        public Criteria andRestrictionLessThan(String value) {
            addCriterion("RESTRICTION <", value, "restriction");
            return (Criteria) this;
        }

        public Criteria andRestrictionLessThanOrEqualTo(String value) {
            addCriterion("RESTRICTION <=", value, "restriction");
            return (Criteria) this;
        }

        public Criteria andRestrictionLike(String value) {
            addCriterion("RESTRICTION like", value, "restriction");
            return (Criteria) this;
        }

        public Criteria andRestrictionNotLike(String value) {
            addCriterion("RESTRICTION not like", value, "restriction");
            return (Criteria) this;
        }

        public Criteria andRestrictionIn(List<String> values) {
            addCriterion("RESTRICTION in", values, "restriction");
            return (Criteria) this;
        }

        public Criteria andRestrictionNotIn(List<String> values) {
            addCriterion("RESTRICTION not in", values, "restriction");
            return (Criteria) this;
        }

        public Criteria andRestrictionBetween(String value1, String value2) {
            addCriterion("RESTRICTION between", value1, value2, "restriction");
            return (Criteria) this;
        }

        public Criteria andRestrictionNotBetween(String value1, String value2) {
            addCriterion("RESTRICTION not between", value1, value2, "restriction");
            return (Criteria) this;
        }

        public Criteria andRemarkIsNull() {
            addCriterion("REMARK is null");
            return (Criteria) this;
        }

        public Criteria andRemarkIsNotNull() {
            addCriterion("REMARK is not null");
            return (Criteria) this;
        }

        public Criteria andRemarkEqualTo(String value) {
            addCriterion("REMARK =", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotEqualTo(String value) {
            addCriterion("REMARK <>", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkGreaterThan(String value) {
            addCriterion("REMARK >", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkGreaterThanOrEqualTo(String value) {
            addCriterion("REMARK >=", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkLessThan(String value) {
            addCriterion("REMARK <", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkLessThanOrEqualTo(String value) {
            addCriterion("REMARK <=", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkLike(String value) {
            addCriterion("REMARK like", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotLike(String value) {
            addCriterion("REMARK not like", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkIn(List<String> values) {
            addCriterion("REMARK in", values, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotIn(List<String> values) {
            addCriterion("REMARK not in", values, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkBetween(String value1, String value2) {
            addCriterion("REMARK between", value1, value2, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotBetween(String value1, String value2) {
            addCriterion("REMARK not between", value1, value2, "remark");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table spt_demand
     *
     * @mbg.generated do_not_delete_during_merge Thu Oct 17 14:47:24 CST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table spt_demand
     *
     * @mbg.generated Thu Oct 17 14:47:24 CST 2019
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}